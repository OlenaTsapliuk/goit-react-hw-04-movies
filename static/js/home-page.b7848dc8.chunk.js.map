{"version":3,"sources":["services/ApiMovies.js","views/Views.module.css","Components/MovieList/MovieList.js","Components/MovieList/MoviesList.module.css","Components/SearchBar/Searchbar.module.css","views/HomePage.js","Components/SearchBar/Searchbar.js","views/MoviesPage.js"],"names":["BASE_URL","KEY","apiMoviesWidthError","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","searchQuery","fetchOneMovie","movieId","fetchCredits","fetchReviews","module","exports","MoviesList","movies","location","useLocation","className","s","list","map","movie","item","link","to","pathname","id","state","from","title","HomePage","useState","setMovies","useEffect","then","results","Searchbar","onSubmit","movieName","setMovieName","searchbar","searchForm","e","preventDefault","trim","toast","info","input","onChange","currentTarget","value","toLowerCase","type","autoComplete","autoFocus","placeholder","button","MoviesPage","isLoading","setIsLoading","length","error","catch","finally","autoClose"],"mappings":"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","file":"static/js/home-page.b7848dc8.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"57d304ecd58f4c0c776a2cf6f2ec46da\";\n\nasync function apiMoviesWidthError(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\nexport function fetchTrendingMovies() {\n  return apiMoviesWidthError(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return apiMoviesWidthError(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchOneMovie(movieId) {\n  return apiMoviesWidthError(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCredits(movieId) {\n  return apiMoviesWidthError(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return apiMoviesWidthError(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Views_title__2Fu_z\",\"titleMovie\":\"Views_titleMovie__2BjfW Views_title__2Fu_z\",\"titleMovieBlock\":\"Views_titleMovieBlock__35PG6 Views_titleMovie__2BjfW Views_title__2Fu_z\",\"button\":\"Views_button__13iPP\",\"image\":\"Views_image__1t1Ht\",\"wrapper\":\"Views_wrapper__EQDaM\",\"container\":\"Views_container__1_vo-\",\"link\":\"Views_link__1ziOw\",\"castList\":\"Views_castList__2iMb5\",\"actorName\":\"Views_actorName__sF0tb\",\"actorCharacter\":\"Views_actorCharacter__ZrlFk\",\"actorWrapper\":\"Views_actorWrapper__6GHmP\",\"text\":\"Views_text__3NIiV\",\"authorReviews\":\"Views_authorReviews__1804L Views_text__3NIiV\"};","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport s from \"./MoviesList.module.css\";\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={s.list}>\n      {movies.map((movie) => (\n        <li key={movie.id} className={s.item}>\n          <Link\n            className={s.link}\n            to={{\n              pathname: `movies/${movie.id}`,\n              state: {\n                from: { location },\n              },\n            }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MoviesList_link__1Zzn0\",\"list\":\"MoviesList_list__1OXrs\",\"item\":\"MoviesList_item__pT66a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"Searchbar_searchForm__2hLKW\",\"button\":\"Searchbar_button__3dJPX\",\"label\":\"Searchbar_label__3DQbe\",\"input\":\"Searchbar_input__2gjHq\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3pfTf\"};","import { useEffect, useState } from \"react\";\nimport MoviesList from \"../Components/MovieList/MovieList\";\nimport s from \"./Views.module.css\";\nimport { fetchTrendingMovies } from \"../services/ApiMovies\";\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n  useEffect(() => {\n    fetchTrendingMovies().then((response) => {\n      setMovies(response.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className={s.title}>Trending today</h1>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from \"./Searchbar.module.css\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [movieName, setMovieName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (movieName.trim() === \"\") {\n      toast.info(\"Enter movie name\");\n      return;\n    }\n    onSubmit(movieName);\n    setMovieName(\"\");\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={movieName}\n        />\n        <button type=\"submit\" className={s.button}></button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { ToastContainer, toast } from \"react-toastify\";\nimport { useState, useEffect } from \"react\";\nimport { fetchSearchMovies } from \"../services/ApiMovies\";\nimport Spinner from \"../Components/Loader/Loader\";\n\nimport Searchbar from \"../Components/SearchBar/Searchbar\";\nimport MoviesList from \"../Components/MovieList/MovieList\";\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const [movieName, setMovieName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    function fetchMovies() {\n      setIsLoading(true);\n      fetchSearchMovies(movieName)\n        .then((movies) => {\n          setMovies(movies.results);\n          if (!movies.results.length) {\n            toast.error(\"No matches were found! Try again\");\n            return;\n          }\n        })\n        .catch((error) => {\n          throw new Error(\"Something went wrong. Try again!\");\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n\n    fetchMovies();\n  }, [movieName]);\n\n  const searchMovie = (movieName) => {\n    setMovieName(movieName);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={searchMovie} />\n      {movies && <MoviesList movies={movies} />}\n      {isLoading && <Spinner />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n"],"sourceRoot":""}